{"version":3,"sources":["components/ContactForm/ContactForm.module.css","redux/contacts/contactAction.js","components/Alert/Alert.js","components/ContactForm/ContactForm.js","components/ContactList/ContactListItem.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/App.js","redux/contacts/contactReducer.js","redux/store.js","index.js"],"names":["module","exports","addContact","createAction","name","number","payload","contact","id","uuidv4","removeContact","changeFilter","connect","state","prop","items","contacts","console","log","length","isContact","nameContact","text","CSSTransition","in","appear","timeout","classNames","unmountOnExit","className","INITIAL_CONTACT_STATE","ContactForm","inputName","target","setState","value","inputNumber","handleSubmit","e","preventDefault","onAddContact","props","this","filtered","itemsArray","map","toLowerCase","includes","onSubmit","style","Contact_form","type","onChange","placeholder","pattern","Component","dispatch","contatctsAction","item","find","onDeleteContact","contactAction","onClick","filter","listNull","TransitionGroup","component","key","mapDispatchToProps","inputFilter","contactActions","App","loc","JSON","parse","localStorage","getItem","defContact","createReducer","combineReducers","store","configureStore","reducer","contactReducer","subscribe","setItem","stringify","getState","ReactDOM","render","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,aAAe,oC,yQCclB,GACbC,WAbiBC,YAAa,sBAAsB,gBAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,OAAT,MAAuB,CAC3EC,QAAS,CACPC,QAAS,CACPC,GAAIC,eACJL,OACAC,eASJK,cALoBP,YAAa,yBAMjCQ,aALmBR,YAAa,yBCenBS,G,MAAAA,aAVS,SAACC,EAAOC,GAAU,IAChCC,EAAUF,EAAMG,SAAhBD,MAGR,OAFAE,QAAQC,IAAIH,GAERA,EAAMI,OAAS,EACV,CAAEC,WAAW,EAAMC,YAAa,IAElC,CAAED,WAAW,KAGkB,KAAzBR,EAtBD,SAAC,GAAD,IAAGU,EAAH,EAAGA,KAAH,OACZ,kBAACC,EAAA,EAAD,CACEC,IAAI,EACJC,QAAQ,EACRC,QAAS,IACTC,WAAW,OACXC,eAAa,GAEb,yBAAKC,UAAU,SAASP,Q,iBCNtBQ,EAAwB,CAC5B1B,KAAM,GACNC,OAAQ,IAGJ0B,E,4MACJlB,MAAQiB,E,EAERE,UAAY,YAAiB,IAAdC,EAAa,EAAbA,OACb,EAAKC,SAAS,CACZ9B,KAAM6B,EAAOE,S,EAIjBC,YAAc,YAAiB,IAAdH,EAAa,EAAbA,OACf,EAAKC,SAAS,CACZ7B,OAAQ4B,EAAOE,S,EAInBE,aAAe,SAACC,GACdA,EAAEC,iBADkB,MAEK,EAAK1B,MAAtBT,EAFY,EAEZA,KAAMC,EAFM,EAENA,QAEdmC,EADyB,EAAKC,MAAtBD,cACK,CAAEpC,OAAMC,WACrB,EAAK6B,SAAL,eAAmBJ,K,uDAGX,IAAD,EACkBY,KAAK7B,MAAtBT,EADD,EACCA,KAAMC,EADP,EACOA,OAGRsC,EAFiBD,KAAKD,MAApBG,WAGLC,KAAI,qBAAGzC,KAAgB0C,iBACvBC,SAAS3C,EAAK0C,eAEjB,OACE,oCACGH,GAAY,kBAAC,EAAD,CAAOrB,KAAK,0BACzB,0BAAM0B,SAAUN,KAAKL,aAAcR,UAAWoB,IAAMC,cAClD,sCAEE,2BACErB,UAAWoB,IAAMjB,UACjBmB,KAAK,OACLhB,MAAO/B,EACPgD,SAAUV,KAAKV,aAGnB,wCAEE,2BACEqB,YAAY,YACZF,KAAK,MACLG,QAAQ,6BACRnB,MAAO9B,EACP+C,SAAUV,KAAKN,eAInB,4BAAQe,KAAK,UAAb,qB,GAvDgBI,aA0EX3C,eAZU,SAACC,GAExB,MAAO,CAAE+B,WADS/B,EAAMG,SAAhBD,UAIiB,SAACyC,GAC1B,MAAO,CACLhB,aAAc,gBAAGpC,EAAH,EAAGA,KAAMC,EAAT,EAASA,OAAT,OACZmD,EAASC,EAAgBvD,WAAW,CAAEE,OAAMC,gBAInCO,CAA8CmB,G,QC7D9CnB,G,MAAAA,aAZS,SAACC,EAAD,GAAoB,IAAVL,EAAS,EAATA,GAC1BkD,EAAO7C,EAAMG,SAASD,MAAM4C,MAAK,SAACD,GAAD,OAAUA,EAAKlD,KAAOA,KAE7D,OAAO,eACFkD,MAIoB,SAACF,EAAD,OAAahD,EAAb,EAAaA,GAAb,MAAuB,CAChDoD,gBAAiB,kBAAMJ,EAASK,EAAcnD,cAAcF,QAG/CI,EApBS,SAAC,GAAD,IAAGR,EAAH,EAAGA,KAAMC,EAAT,EAASA,OAAQuD,EAAjB,EAAiBA,gBAAjB,OACtB,wBAAI/B,UAAU,cACZ,0BAAMA,UAAU,cAAczB,GAC9B,0BAAMyB,UAAU,gBAAgBxB,GAChC,4BAAQ8C,KAAK,SAASW,QAASF,SCyBpBhD,eAXS,SAACC,EAAOC,GAAU,IAAD,EACbD,EAAMG,SAAxBD,EAD+B,EAC/BA,MAAOgD,EADwB,EACxBA,OACTC,EAA4B,IAAjBjD,EAAMI,OAMvB,MAAO,CAAEH,SAJeD,EAAMgD,QAAO,qBAAG3D,KACjC0C,cAAcC,SAASgB,EAAOjB,kBAGDkB,SAAUA,KAGR,KAAzBpD,EA1BK,SAAC,GAA4B,IAA1BI,EAAyB,EAAzBA,SAAUgD,EAAe,EAAfA,SAC/B,OACE,oCACGA,GAAY,kBAAC,EAAD,CAAO1C,KAAK,oBACzB,kBAAC2C,EAAA,EAAD,CAAiBC,UAAU,KAAKrC,UAAU,gBACvCb,EAAS6B,KAAI,gBAAGrC,EAAH,EAAGA,GAAIJ,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAb,OACZ,kBAACkB,EAAA,EAAD,CAAe4C,IAAK3D,EAAIkB,QAAS,IAAKC,WAAW,QAC/C,kBAAC,EAAD,CAAiBnB,GAAIA,EAAIJ,KAAMA,EAAMC,OAAQA,aCuBnD+D,G,MAAqB,CACzBC,YAAaC,EAAe3D,eAGfC,eAXS,SAACC,GACvB,OAAIA,EAAMG,SAASD,MAAMI,OAAS,EACzB,CAAEgB,MAAOtB,EAAMG,SAAS+C,OAAQ3C,WAAW,GAE7C,CAAEe,MAAOtB,EAAMG,SAAS+C,UAOOK,EAAzBxD,EAnCA,SAAC,GAAD,IAAGuB,EAAH,EAAGA,MAAOkC,EAAV,EAAUA,YAAajD,EAAvB,EAAuBA,UAAvB,OACb,oCACGA,GACC,kBAACG,EAAA,EAAD,CACEC,IAAI,EACJC,QAAQ,EACRE,WAAW,OACXD,QAAS,IACTE,eAAa,GAEb,yBAAKC,UAAU,eACb,8DACA,2BACEA,UAAU,YACVsB,KAAK,OACLhB,MAAOA,EACPiB,SAAU,gBAAGnB,EAAH,EAAGA,OAAH,OAAgBoC,EAAYpC,EAAOE,gB,MCf1C,SAASoC,IACtB,OACE,yBAAK1C,UAAU,uBACb,kBAACN,EAAA,EAAD,CACEC,IAAI,EACJC,QAAQ,EACRE,WAAW,aACXD,QAAS,IACTE,eAAa,GAEb,wBAAIC,UAAU,SAAd,cAGF,kBAACN,EAAA,EAAD,CACEC,IAAI,EACJC,QAAQ,EACRE,WAAW,YACXD,QAAS,IACTE,eAAa,GAEb,kBAAC,EAAD,OAEF,kBAAC,EAAD,MACA,kBAAC,EAAD,O,4BCpBA4C,EAAMC,KAAKC,MAAMC,aAAaC,QAAQ,aACtCC,EAAaL,EAAIrD,OAAS,EAAIqD,EARZ,CACtB,CAAEhE,GAAI,OAAQJ,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEG,GAAI,OAAQJ,KAAM,iBAAkBC,OAAQ,aAC9C,CAAEG,GAAI,OAAQJ,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEG,GAAI,OAAQJ,KAAM,iBAAkBC,OAAQ,cAU1CU,EAAQ+D,YAAcD,GAAD,mBACxBhB,EAAc3D,YALI,SAACW,EAAD,YAAUP,QAAuBC,SAAjC,mBAA6CM,OAIvC,cAExBgD,EAAcnD,eALO,SAACG,EAAD,OAAUP,EAAV,EAAUA,QAAV,OACtBO,EAAMkD,QAAO,qBAAGvD,KAAgBF,QAEP,IAKrByD,EAASe,YAAc,GAAD,eACzBjB,EAAclD,cAAe,SAACE,EAAD,YAAUP,YAG3ByE,cAAgB,CAC7BhE,QACAgD,WC3BIiB,EAAQC,YAAe,CAC3BC,QAAS,CACPlE,SAAUmE,KAIdH,EAAMI,WAAU,WACdT,aAAaU,QACX,WACAZ,KAAKa,UAAUN,EAAMO,WAAWvE,SAASD,WAI9BiE,QCTfQ,IAASC,OACP,kBAAC,IAAD,CAAUT,MAAOA,GACf,kBAAC,EAAD,OAEFU,SAASC,eAAe,W","file":"static/js/main.43cdbbde.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Contact_form\":\"ContactForm_Contact_form__spOgN\"};","import { v4 as uuidv4 } from \"uuid\";\nimport { createAction } from \"@reduxjs/toolkit\";\n\nconst addContact = createAction(\"contact/addContact\", ({ name, number }) => ({\n  payload: {\n    contact: {\n      id: uuidv4(),\n      name,\n      number,\n    },\n  },\n}));\nconst removeContact = createAction(\"contact/removeContact\");\nconst changeFilter = createAction(\"contact/changeFilter\");\n\nexport default {\n  addContact,\n  removeContact,\n  changeFilter,\n};\n","import React from \"react\";\nimport { CSSTransition } from \"react-transition-group\";\nimport { connect } from \"react-redux\";\n\nimport \"./alert.css\";\n\nconst Alert = ({ text }) => (\n  <CSSTransition\n    in={true}\n    appear={true}\n    timeout={500}\n    classNames=\"anim\"\n    unmountOnExit\n  >\n    <div className=\"alert\">{text}</div>\n  </CSSTransition>\n);\n\nconst mapStateToProps = (state, prop) => {\n  const { items } = state.contacts;\n  console.log(items);\n\n  if (items.length > 4) {\n    return { isContact: true, nameContact: 10 };\n  }\n  return { isContact: false };\n};\n\nexport default connect(mapStateToProps, null)(Alert);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport contatctsAction from \"../../redux/contacts/contactAction\";\nimport Alert from \"../Alert/Alert\";\n\nimport style from \"./ContactForm.module.css\";\n\nconst INITIAL_CONTACT_STATE = {\n  name: \"\",\n  number: \"\",\n};\n\nclass ContactForm extends Component {\n  state = INITIAL_CONTACT_STATE;\n\n  inputName = ({ target }) => {\n    this.setState({\n      name: target.value,\n    });\n  };\n\n  inputNumber = ({ target }) => {\n    this.setState({\n      number: target.value,\n    });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const { name, number } = this.state;\n    const { onAddContact } = this.props;\n    onAddContact({ name, number });\n    this.setState({ ...INITIAL_CONTACT_STATE });\n  };\n\n  render() {\n    const { name, number } = this.state;\n    const { itemsArray } = this.props;\n\n    const filtered = itemsArray\n      .map(({ name }) => name.toLowerCase())\n      .includes(name.toLowerCase());\n\n    return (\n      <>\n        {filtered && <Alert text=\"Contact already exist\" />}\n        <form onSubmit={this.handleSubmit} className={style.Contact_form}>\n          <label>\n            Name\n            <input\n              className={style.inputName}\n              type=\"text\"\n              value={name}\n              onChange={this.inputName}\n            />\n          </label>\n          <label>\n            Number\n            <input\n              placeholder=\"XXX-XX-XX\"\n              type=\"tel\"\n              pattern=\"[0-9]{3}-[0-9]{2}-[0-9]{2}\"\n              value={number}\n              onChange={this.inputNumber}\n            />\n          </label>\n\n          <button type=\"submit\">ADD CONTACT</button>\n        </form>\n      </>\n    );\n  }\n}\n\nconst mapStateToProprs = (state) => {\n  const { items } = state.contacts;\n  return { itemsArray: items };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onAddContact: ({ name, number }) =>\n      dispatch(contatctsAction.addContact({ name, number })),\n  };\n};\n\nexport default connect(mapStateToProprs, mapDispatchToProps)(ContactForm);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport contactAction from \"../../redux/contacts/contactAction\";\nimport \"./ContacList.css\";\n\nconst ContactListItem = ({ name, number, onDeleteContact }) => (\n  <li className=\"phone_Item\">\n    <span className=\"phone_name\">{name}</span>\n    <span className=\"phone_number\">{number}</span>\n    <button type=\"button\" onClick={onDeleteContact}></button>\n  </li>\n);\n\nconst mapStateToProps = (state, { id }) => {\n  const item = state.contacts.items.find((item) => item.id === id);\n  // console.log(item);\n  return {\n    ...item,\n  };\n};\n\nconst mapDispatchToProps = (dispatch, { id }) => ({\n  onDeleteContact: () => dispatch(contactAction.removeContact(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactListItem);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\n\nimport ContactListItem from \"./ContactListItem\";\nimport Alert from \"../Alert/Alert\";\n\nimport \"./ContacList.css\";\n\nconst ContactList = ({ contacts, listNull }) => {\n  return (\n    <>\n      {listNull && <Alert text=\"No have contact\" />}\n      <TransitionGroup component=\"ul\" className=\"contact_list\">\n        {contacts.map(({ id, name, number }) => (\n          <CSSTransition key={id} timeout={250} classNames=\"list\">\n            <ContactListItem id={id} name={name} number={number} />\n          </CSSTransition>\n        ))}\n      </TransitionGroup>\n    </>\n  );\n};\n\nconst mapStateToProps = (state, prop) => {\n  const { items, filter } = state.contacts;\n  const listNull = items.length === 0;\n\n  const visibleContacts = items.filter(({ name }) =>\n    name.toLowerCase().includes(filter.toLowerCase())\n  );\n\n  return { contacts: visibleContacts, listNull: listNull };\n};\n\nexport default connect(mapStateToProps, null)(ContactList);\n","import React from \"react\";\nimport { CSSTransition } from \"react-transition-group\";\nimport { connect } from \"react-redux\";\n\nimport contactActions from \"../../redux/contacts/contactAction\";\n\nimport \"./Filter.css\";\n\nconst Filter = ({ value, inputFilter, isContact }) => (\n  <>\n    {isContact && (\n      <CSSTransition\n        in={true}\n        appear={true}\n        classNames=\"find\"\n        timeout={500}\n        unmountOnExit\n      >\n        <div className=\"findContact\">\n          <p>Find contacts by name or number</p>\n          <input\n            className=\"inputName\"\n            type=\"text\"\n            value={value}\n            onChange={({ target }) => inputFilter(target.value)}\n          />\n        </div>\n      </CSSTransition>\n    )}\n  </>\n);\n\nconst mapStateToProps = (state) => {\n  if (state.contacts.items.length > 1) {\n    return { value: state.contacts.filter, isContact: true };\n  }\n  return { value: state.contacts.filter };\n};\n\nconst mapDispatchToProps = {\n  inputFilter: contactActions.changeFilter,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import React from \"react\";\nimport { CSSTransition } from \"react-transition-group\";\n\nimport ContactForm from \"./ContactForm/ContactForm\";\nimport ContactList from \"./ContactList/ContactList\";\nimport Filter from \"./Filter/Filter\";\n\nimport \"./App.css\";\n\nexport default function App() {\n  return (\n    <div className=\"phoneBook_container\">\n      <CSSTransition\n        in={true}\n        appear={true}\n        classNames=\"title_anim\"\n        timeout={500}\n        unmountOnExit\n      >\n        <h1 className=\"title\">Phonebook</h1>\n      </CSSTransition>\n\n      <CSSTransition\n        in={true}\n        appear={true}\n        classNames=\"form_fade\"\n        timeout={500}\n        unmountOnExit\n      >\n        <ContactForm />\n      </CSSTransition>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n}\n","import { combineReducers } from \"redux\";\nimport { createReducer } from \"@reduxjs/toolkit\";\n\nimport contactAction from \"./contactAction\";\n\nconst defaultContacts = [\n  { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n  { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n  { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n  { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n];\n\nconst loc = JSON.parse(localStorage.getItem(\"contacts\"));\nconst defContact = loc.length > 0 ? loc : defaultContacts;\n\nconst onAddContact = (state, { payload }) => [payload.contact, ...state];\nconst onRemoveContact = (state, { payload }) =>\n  state.filter(({ id }) => id !== payload);\n\nconst items = createReducer(defContact, {\n  [contactAction.addContact]: onAddContact,\n  [contactAction.removeContact]: onRemoveContact,\n});\n\nconst filter = createReducer(\"\", {\n  [contactAction.changeFilter]: (state, { payload }) => payload,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n});\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport contactReducer from \"../redux/contacts/contactReducer\";\n\nconst store = configureStore({\n  reducer: {\n    contacts: contactReducer,\n  },\n});\n\nstore.subscribe(() => {\n  localStorage.setItem(\n    \"contacts\",\n    JSON.stringify(store.getState().contacts.items)\n  );\n});\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\n\nimport App from \"./components/App.js\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}